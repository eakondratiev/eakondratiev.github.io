function processFloatingPointValue(t,f){function r(c,g){var b,a,q=c.length;switch(q){case 32:var h=8;var l=127;break;case 64:h=11;l=1023;break;default:f.innerHTML="Must be 32 or 64 bits."}var m="";var p=h||8;for(a=0;a<c.length;a++)if(m+='<span class="fp-bit '+(0===a?"fp-sign":a<=(p||8)?"fp-exp":"fp-fraction")+'">'+c[a]+"</span>",7===a||15===a||23===a||31===a||39===a||47===a||55===a||63===a)m+=" ";a="<h2>"+q+'-bit representation</h2><div class="bits">'+m+"</div>";if(0===g)return a+"<p>Zero is a special case: all bits are zeroes.</p>";
var d='The sign bit <span class="fp-bit fp-sign">'+c[0]+"</span>: the number is ";0===c[0]?(d+="<b>positive</b>.",m="+",p=1):(d+="<b>negative</b>.",m="-",p=-1);a+="<p>"+d+"</p>";var e="";for(b=1;b<=h;b++)e+=c[b];d="The exponent stored as "+h+' bits <span class="fp-bit fp-exp">'+(e+"</span> = ");e=parseInt(e,2);a+="<p>"+(d+("<b>"+e+"</b> and the real value is "+e+" - "+l+" = <b>"+(e-l)+"</b>. So the exponent is <b>2<sup>"+(e-l)+"</sup></b>.</p>"));d="";var n=0;for(b=h+1;b<q;b++)0<b&&0===b%8&&(d+='</span> <span class="fp-bit fp-fraction">'),
d+=c[b],n+=c[b]*Math.pow(2,h-b);b={minimumFractionDigits:10,maximumFractionDigits:20};d="The fraction stored as "+(q-h-1)+' bits <span class="fp-bit fp-fraction">'+(d+"</span> = "+n+". The 1 is not stored but asumed, so the fraction is 1 + "+n+" = <b>"+T.formatNumber(1+n,"en-US",b)+"</b>.");a+="<p>"+d+"</p>";p*=(1+n)*Math.pow(2,e-l);return a+="<p>The number <b>"+g+"</b> is represented as <b>"+m+(1+n)+"&times;2<sup>"+(e-l)+"</sup> = <b>"+T.formatNumber(p,"en-US",b)+"</b></p >"}var k=T.getNumber(t.value);
f.innerHTML="";isNaN(k)||!isFinite(k)?f.innerHTML="n/a":fetch("/assets/fprep.wasm").then(function(c){return c.arrayBuffer()}).then(function(c){return WebAssembly.instantiate(c)}).then(function(c){var g=c.instance.exports,b=g.memory;c=g.getFloatBits;g=g.getDoubleBits;var a=new Int32Array(b.buffer,0,32);b=new Int32Array(b.buffer,0,64);c(a.byteOffser,k);f.innerHTML+=r(a,k);g(b.byteOffser,k);f.innerHTML+=r(b,k);f.innerHTML+='<p>The javascript representation is 64-bits</p><div class="content-wide"><b>'+
k.toFixed(20)+"</b></div>"})["catch"](console.error)};