function processFloatingPointValue(p,c){function l(b,e){var a,f="";e=e||8;for(a=0;a<b.length;a++)if(f+='<span class="fp-bit '+(0===a?"fp-sign":a<=(e||8)?"fp-exp":"fp-fraction")+'">'+b[a]+"</span>",7===a||15===a||23===a||31===a||39===a||47===a||55===a||63===a)f+=" ";return f}var g=T.getNumber(p.value);if(isNaN(g)||!isFinite(g))c.innerHTML="n/a";else if(c.innerHTML="<h2>32-bit representation</h2>",0===g){var m=[],k;for(k=0;32>k;k++)m[k]=0;c.innerHTML+="<p>Zero is a <b>special case</b>. It represented by special bit pattern of all zeroes.</p><p>"+
l(m,8)+"</p>"}else fetch("/assets/fprep.wasm").then(function(b){return b.arrayBuffer()}).then(function(b){return WebAssembly.instantiate(b)}).then(function(b){b=b.instance.exports;var e=b.getFloatBits;b=new Int32Array(b.memory.buffer,0,32);e(b.byteOffser,g);c.innerHTML+='<div class="bits">'+l(b,8)+"</div>";var a='The sign bit <span class="fp-bit fp-sign">'+b[0]+"</span>: the number is ";if(0===b[0]){a+="<b>positive</b>.";var f="+";e=1}else a+="<b>negative</b>.",f="-",e=-1;c.innerHTML+="<p>"+a+"</p>";
var d="";for(a=1;8>=a;a++)d+=b[a];a='The exponent stored as <span class="fp-bit fp-exp">'+(d+"</span> = ");d=parseInt(d,2);c.innerHTML+="<p>"+(a+("<b>"+d+"</b> and the real value is "+d+" - 127 = <b>"+(d-127)+"</b>. So the exponent is <b>2<sup>"+(d-127)+"</sup></b>.</p>"));var n="",h=0;for(a=9;32>a;a++)n+=b[a],h+=b[a]*Math.pow(2,8-a);c.innerHTML+='<p>The fraction stored as <span class="fp-bit fp-fraction">'+(n+"</span> = "+h+". The 1 is not stored but asumed, so the fraction is 1 + "+h+" = <b>"+(1+
h)+"</b>.</p>");e*=(1+h)*Math.pow(2,d-127);c.innerHTML+="<p>The number <b>"+g+"</b> is represented as <b>"+f+(1+h)+"&times;2<sup>"+(d-127)+"</sup> = <b>"+e+"</b></p > ";c.innerHTML+="<p>The javascript representation is 64-bits <b>"+g.toFixed(32)+"</b>.</p>"})["catch"](console.error)};