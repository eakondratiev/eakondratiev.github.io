function processFloatingPointValue(t,f){function r(c,g){var a,h=c.length;switch(h){case 32:var k=8;var n=127;break;case 64:k=11;n=1023;break;default:f.innerHTML="Must be 32 or 64 bits."}var b;var l="";var q=k||8;for(b=0;b<c.length;b++)if(l+='<span class="fp-bit '+(0===b?"fp-sign":b<=(q||8)?"fp-exp":"fp-fraction")+'">'+c[b]+"</span>",7===b||15===b||23===b||31===b||39===b||47===b||55===b||63===b)l+=" ";var d='The sign bit <span class="fp-bit fp-sign">'+c[0]+"</span>: the number is ";0===c[0]?(d+="<b>positive</b>.",
b="+",q=1):(d+="<b>negative</b>.",b="-",q=-1);l="<h2>"+h+'-bit representation</h2><div class="bits">'+l+"</div><p>"+(d+"</p>");var e="";for(a=1;a<=k;a++)e+=c[a];d="The exponent stored as "+k+' bits <span class="fp-bit fp-exp">'+(e+"</span> = ");e=parseInt(e,2);l+="<p>"+(d+("<b>"+e+"</b> and the real value is "+e+" - "+n+" = <b>"+(e-n)+"</b>. So the exponent is <b>2<sup>"+(e-n)+"</sup></b>.</p>"));d="";var p=0;for(a=k+1;a<h;a++)0<a&&0===a%8&&(d+='</span> <span class="fp-bit fp-fraction">'),d+=c[a],
p+=c[a]*Math.pow(2,k-a);a={minimumFractionDigits:10,maximumFractionDigits:20};d="The fraction stored as "+(h-k-1)+' bits <span class="fp-bit fp-fraction">'+(d+"</span> = "+p+". The 1 is not stored but asumed, so the fraction is 1 + "+p+" = <b>"+T.formatNumber(1+p,"en-US",a)+"</b>.");l+="<p>"+d+"</p>";q*=(1+p)*Math.pow(2,e-n);return l+="<p>The number <b>"+g+"</b> is represented as <b>"+b+(1+p)+"&times;2<sup>"+(e-n)+"</sup> = <b>"+T.formatNumber(q,"en-US",a)+"</b></p >"}var m=T.getNumber(t.value);f.innerHTML=
"";isNaN(m)||!isFinite(m)?f.innerHTML="n/a":fetch("/assets/fprep.wasm").then(function(c){return c.arrayBuffer()}).then(function(c){return WebAssembly.instantiate(c)}).then(function(c){var g=c.instance.exports,a=g.memory;c=g.getFloatBits;g=g.getDoubleBits;var h=new Int32Array(a.buffer,0,32);a=new Int32Array(a.buffer,0,64);c(h.byteOffser,m);f.innerHTML+=r(h,m);g(a.byteOffser,m);f.innerHTML+=r(a,m);f.innerHTML+='<p>The javascript representation is 64-bits</p><div class="content-wide"><b>'+m.toFixed(20)+
"</b></div>"})["catch"](console.error)};