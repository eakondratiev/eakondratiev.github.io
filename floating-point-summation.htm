<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Floating-Point Summation -- Free Online Tool</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <meta name="apple-mobile-web-app-title" content="Floating-Point Summation" />
    <meta name="application-name" content="Floating-Point Summation" />

    <meta property="og:title" content="Floating-Point Summation">
    <meta name="description" content="Discover inaccuracy of the floating-point representation of numbers.">
    <meta property="og:description" content="Discover inaccuracy of the floating-point representation of numbers.">
    <meta property="og:locale" content="en_US">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://eakondratiev.github.io/floating-point-summation.htm">
    <link rel="canonical" href="https://eakondratiev.github.io/floating-point-summation.htm">

    <meta name="msapplication-config" content="/assets/icons/browserconfig.xml" />
    <meta name="theme-color" content="#444444"  />
    <link rel="apple-touch-icon" sizes="180x180" href="/assets/icons/apple-touch-icon-180.png" />
    <link rel="manifest" href="/assets/icons/manifest.json" />
    <link rel="icon" type="image/png" href="/assets/icons/favicon-96.png" sizes="96x96" />
    <link rel="icon" type="image/png" href="/assets/icons/favicon-32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="/assets/icons/favicon-16.png" sizes="16x16" />
  
    <link href="/assets/main.css?20230912" rel="stylesheet" type="text/css" />
    <script src="/assets/menu.min.js?20240617"></script>
    <script src="/assets/web-app.js"></script>
    <style>
      .note {color: #000; font-size: 0.9rem;}
      .fp-form {margin-top: 16pt;}
      .fp-form input, .fp-form button {padding: 2pt 4pt; height: 20pt; box-sizing: border-box;}
      .num {font-family:Lucida Console, Courier New, Courier, monospace; font-size: 0.9rem; line-height: 1.4;}
      @media (prefers-color-scheme: dark) {
        .note {color: #ccc;}
      }
    </style>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-PTBT00LYFH"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-PTBT00LYFH');
    </script>
  </head>
  <body>
    <div class="main-content">
      <div class="page-wide header">
        <header class="content">
          <button class="site-menu-btn" aria-label="Open the site menu">
            <div></div>
            <div></div>
            <div></div>
          </button>
          <div class="site-title"><a class="site-logo" href="/">TOOL</a></div>
        </header>
        <nav class="content site-nav" aria-label="Site menu">
          <h3 class="site-nav-header">Online Tools</h3>
          <ul>
          <li class="site-nav-top-item"><a href="file.htm">File Type by Content</a></li>
          <li class="site-nav-top-item"><a href="regex.htm">Regex Tester</a></li>
          <li class="site-nav-top-item"><a href="roman-numerals.htm">Convert a Roman Number</a></li>
          <li class="site-nav-top-item"><a href="iprange.htm">IPv4 Ranges</a></li>
          <li class="site-nav-top-item"><a href="speed.htm">Speed &amp; Distance</a></li>
          <li class="site-nav-top-item"><a href="ws.htm">White Spaces</a></li>
          <li class="site-nav-top-item"><a href="floating-point-representation.htm">Representation of Floating-point Numbers 32 and 64 bits</a></li>
          <li class="site-nav-top-item"><a href="floating-point-summation.htm">Floating-point Summation</a></li>
          </ul>
          <h3 class="site-nav-header">Console Tools</h3>
          <ul>
            <li class="site-nav-top-item"><a href="crd-reader.htm">CRD Reader</a></li>
          </ul>
        </nav>
      </div>
      <div class="page-wide">
        <div class="content page-content">
          <noscript><div>This site uses javascript. Please, turn it on in your browser settings.</div></noscript>
          <div id="incompatible-browser">Please, update your browser.</div>
          <h1>Floating-Point Summation</h1>
          <div class="fp-form">
            <input type="text" id="input-numbers" placeholder="0.1;0.2" value="0.1;0.2" aria-label="Enter some semicolon delimited numbers">
            <button type="button" id="btn-calc-sum" accesskey="S"><u>S</u>um</button>
          </div>
          <div class="note">Enter some numbers delimited with the semicolon ";" character.</div>
          <div class="note">Examples:
            <a href="floating-point-summation.htm?n=0.1;0.2;0.3">0.1;0.2;0.3</a>,
            <a href="floating-point-summation.htm?n=0.1;0.2">0.1;0.2</a>,
            <a href="floating-point-summation.htm?n=0.25;0.5">0.25;0.5</a>,
          </div>
          <div class="summation-result"></div>

          <p>
           Real numbers are <a href="floating-point-representation.htm">represented</a> in computing as an approximation.
           Numbers with a common fraction in which the denominator is a power of two
           are stored as exact numbers: 1/2, 1/4, 3/8, etc.
           See the <a href="https://en.wikipedia.org/wiki/Floating-point_arithmetic" rel="nofollow" class="outer-link">Floating-point arithmetics</a>
           article on Wikipedia.
          </p>
          <p>Some algorithms can reduce the numerical error which accumulates when adding real numbers in a sequence.
          For example,
          <a href="https://en.wikipedia.org/wiki/Kahan_summation_algorithm" rel="nofollow" class="outer-link">Kahan summation algorithm</a>
          and its variations. <b>Note</b>: these algorithms work for three or more numbers.</p>
        </div>
      </div>
    </div>
    <div class="page-wide footer">
      <div class="footer-menu">
        <ul>
        <li><a href="crd-reader.htm">CRD File Reader Console App</a></li>
        <li><a href="file.htm">Get File Type by Content</a></li>
        <li><a href="mouse-events.htm">Mouse Events</a></li>
        <li><a href="iprange.htm">IPv4 Ranges</a></li>
        <li><a href="regex.htm">Test Regular Expressions</a></li>
        <li><a href="roman-numerals.htm">Roman Numerals Converter</a></li>
        <li><a href="floating-point-representation.htm">Floating-point Representation, 32/64 bit</a></li>
        <li><a href="floating-point-summation.htm">Floating-point Summation</a></li>
        <li><a href="speed.htm">Speed &amp; Distance Scale</a></li>
        <li><a href="ws.htm">Character Code Detector</a></li>
        </ul>
      </div>
      imperfect <b>tools</b>
    </div>
    <script>
      var inputElement = document.getElementById('input-numbers');

      // check for compatibility
      if (document.getElementsByClassName === undefined ||
         !Element.prototype.addEventListener ||
         !Array.prototype.map ||
         !Array.prototype.reduce) {

        document.getElementById('incompatible-browser').style.display = 'block';

      }
      else {

        var resultElement = document.getElementsByClassName('summation-result')[0];
        var calcBtn = document.getElementById('btn-calc-sum');
        var urlParams = T.getUrlParameters();

        if (urlParams.n !== undefined) {
          // process the url parameter
          inputElement.value = urlParams.n;
          processClick(inputElement, resultElement);
        }

        calcBtn.addEventListener('click', function() {
          processClick (inputElement, resultElement);
        });

        inputElement.addEventListener('keypress', function(e) { 
          if (e.key === 'Enter') {
            processClick (inputElement, resultElement); 
          }
        });

      }

      /**
       * Processes click of the button.
       * @param inputElement the input element.
       * @param resultElement the result element.
       */
      function processClick(inputElement, resultElement) {

        var inputTexts = inputElement.value.split(';'),
          inputNumbers = inputTexts.map(function (x) { return T.getNumber(x); });
        var resInputRaw = inputNumbers.join('<br>');

        if (inputElement.value === '') {
          resultElement.innerHTML = '';
          return;
        }

        resultElement.innerHTML =
          '<h3>Input</h3>' +
          '<div class="num">' + resInputRaw + '</div>' +
          '<h3>Floating-point Representation in Javascript</h3>' +
          '<div class="num">' + inputNumbers.map(function (x) { return fpsJsNumber(x); }).join('<br>') + '</div>' +
          '<h3>Simple Summation</h3>' +
          '<div class="num">' + inputNumbers.reduce(function (acc, v) { return acc + v; }) + '</div>' +
          '<h3>Klein Algorigthm</h3>' +
          '<div class="num">' + fpsKleinSum (inputNumbers) + '</div>';

      }

      /**
       * Returns string representation of the number using maximum of fractional digits.
       * @param {number} n the number.
       * @returns {string}
       */
      function fpsJsNumber(n) {

        var s;

        try {
          s = n.toFixed(32);
        }
        catch (err) {
          // older browsers
          s = n.toFixed(20);
        }

        return s;
      }

      /**
       * Returns sum of the input values.
       * See https://en.wikipedia.org/wiki/Kahan_summation_algorithm
       * @param {[Number]} input The input numbers.
       */
      function fpsKleinSum(input) {
          var sum = 0.0;
          var cs = 0.0;
          var ccs = 0.0;
          var t;
          var i;

          for (i = 0; i < input.length; i++) {
              t = sum + input[i];
              if (Math.abs(sum) >= Math.abs(input[i])) {
                  c = (sum - t) + input[i];
              }
              else {
                  c = (input[i] - t) + sum;
              }
              sum = t;
              t = cs + c;
              if (Math.abs (cs) >= Math.abs(c)) {
                  cc = (cs - t) + c;
              }
              else {
                  cc = (c - t) + cs;
              }
              cs = t;
              ccs = ccs + cc;
          }

          return sum + cs + ccs;

      }
    </script>
  </body>
</html>