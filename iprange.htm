<!doctype html>
<html lang="en" class="no-js">
<head>
  <meta charset="UTF-8">
  <title>IP Range Calculator</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <meta name="apple-mobile-web-app-title" content="IP Range" />
  <meta name="application-name" content="IP Range" />

  <meta property="og:title" content="IP Range Calculator">
  <meta name="description" content="Calculates the network mask and CIDR for subnets of the IPv4 range.">
  <meta property="og:description" content="Calculates the network mask and CIDR for subnets of the IPv4 range.">
  <meta property="og:locale" content="en_US">
  <meta property="og:type" content="website">
  <meta property="og:url" content="https://eakondratiev.github.io/iprange.htm">
  <link rel="canonical" href="https://eakondratiev.github.io/iprange.htm">

  <meta name="msapplication-config" content="/assets/icons/browserconfig.xml" />
  <meta name="theme-color" content="#ffffff" />
  <link rel="apple-touch-icon" sizes="180x180" href="/assets/icons/apple-touch-icon-180.png" />
  <link rel="manifest" href="/assets/icons/manifest.json" />
  <link rel="icon" type="image/png" href="/assets/icons/favicon-32.png" sizes="32x32" />
  <link rel="icon" type="image/png" href="/assets/icons/favicon-16.png" sizes="16x16" />
  <link href="/assets/main.css?20210505" rel="stylesheet" type="text/css" />
  <script src="/assets/menu.js"></script>
  <style>
    input[type=text] {padding: 2pt; width: 195px;}
    .range-calc {border-bottom: dotted 1pt #777; margin: 8pt 0; padding: 4pt 0;}
    .range-example {font-size: 0.8rem;}
    .range-result {margin: 8pt 0;}
    .page-content p.extended-range-note {color: #c00;}
    @media (prefers-color-scheme: dark) {
      .page-content p.extended-range-note {color: #f93;}
    }
  </style>
</head>
<body>
  <div class="main-content">
    <div class="page-wide header">
        <header class="content">
          <div class="site-menu-btn">
            <div></div>
            <div></div>
            <div></div>
          </div>
          <div class="site-title"><a class="site-logo" href="/">TOOL</a></div>
        </header>
        <nav class="content site-nav">
          <ul>
          <li class="site-nav-top-item"><a href="/">Home Page</a></li>
          <li class="site-nav-top-item"><a href="speed.htm">Speed &amp; Distance</a></li>
          <li class="site-nav-top-item"><a href="ws.htm">White Spaces</a></li>
          <li class="site-nav-top-item"><a href="floating-point-summation.htm">Floating-point Summation</a></li>
          </ul>
        </nav>
    </div>
    <div class="page-wide">
      <div class="content page-content">
        <h1>IP Range Calculator</h1>
        <p>Enter the IPv4 range and get the network mask and CIDR for its subnets.</p>
        <div class="range-calc">
          <div style="margin: 4pt 0;">IP <u>R</u>ange</div>
          <input type="text" placeholder="192.168.0.0-192.168.0.255" class="form-range" accesskey="R" />
          <button onclick="CalculateRanges()" accesskey="M">Get <u>M</u>ask</button>
          <p class="range-example">Example: <a href="#" id="range-example-link">192.168.0.0-192.168.0.255</a></p>
          <div class="range-result"></div>
        </div>
        <!-- version 2021-05-05 -->

      </div>
    </div>
  </div>
  <div class="page-wide footer">
    imperfect <b>tools</b>
  </div>

  <script src="/assets/iplib.min.js?20200826"></script>
  <script>
    /*
     * The complex range example:
     *   221.0.0.0 - 221.3.127.255
     *   result
     *   221.0.0.0/15 221.0.0.0 - 221.1.255.255
     *   221.2.0.0/16 221.2.0.0 - 221.2.255.255
     *   221.3.0.0/17 221.3.0.0 - 221.3.127.255
     *
     * Normal range example:
     * 192.168.0.0 - 192.168.0.255
     *   CIDR 192.168.0.0/24
     *   MASK: 255.255.255.0
     *   Total host: 256
     *   
     *   Tests in IPlibTest ();
     */

    var exampleLink = document.getElementById('range-example-link');

    exampleLink.addEventListener('click', function (event) {

      document.getElementsByClassName('form-range')[0].value = exampleLink.innerHTML;

    });

    document.getElementsByClassName('form-range')[0].addEventListener('keyup', function (event) {
      // Number 13 is the "Enter" key on the keyboard
      if (event.keyCode === 13) {
        // Cancel the default action, if needed
        event.preventDefault();
        // Trigger the button element with a click
        CalculateRanges();
      }
    });

    /**
      * Calculates the IP mask, CIDR and amount of IP addresses by the IP addresses range.
      */
    function CalculateRanges() {

      'use strict';

      var textElement = document.getElementsByClassName('form-range')[0],
        resultElement = document.getElementsByClassName('range-result')[0],
        text = textElement.value.trim(),
        reRange = /^([\.0-9]{7,15})\s*-\s*([\.0-9]{7,15})$/,
        m = reRange.exec(text),
        ip1,
        ip2,
        ranges;

      textElement.focus(); // otherwise the button will be emphasized

      // Get and validate IP addresses.
      if (m === null) {
        showError('Not an IP v4 range.', resultElement);
        return;
      }

      // IP address arrays:
      // * four numbers (octets),
      // * element 0 - most significant, 3 - least significant.
      // For example, 192.168.0.15 indices are:
      //                0   1 2  3
      ip1 = IPlib.getIp4ByteArray(m[1]); // array of four octets
      ip2 = IPlib.getIp4ByteArray(m[2]);

      if (!IPlib.isIPv4(ip1)) {
        showError('The first value is not valid IP v4 address.', resultElement);
        return;
      }

      if (!IPlib.isIPv4(ip2)) {
        showError('The second value is not valid IP v4 address.', resultElement);
        return;
      }

      if ((IPlib.compareIpAddresses(ip1, ip2) > 0)) {
        showError('The first IP address must precede the second IP address.', resultElement);
        return;
      }

      ranges = IPlib.getRanges(ip1, ip2);

      resultElement.innerHTML = '';

      for (var i = 0; i < ranges.length; i++) {
        resultElement.innerHTML += rangeToString(ranges[i]);
      }

      /**
       * Shows the text in the element.
       */
      function showError (text, element) {

        if (text === undefined && text.length === 0) {
          return;
        }
        element.innerHTML = '<span style="color:#e00">' + text + '</span>';

      }

      /**
       * Returns the string representation of the range.
       * @param {*} range The IP range.
       */
      function rangeToString (range) {

        var ip1text = range.from.join('.');
        var maskText = range.mask.join('.');

        return '<p>Range: ' + ip1text + ' &mdash; ' + range.to.join('.') +
          '<br />Mask: <b>' + maskText + '</b>' +
          '<br />CIDR ' + ip1text + ' / ' + range.prefixBits.toString() +
          '<br />Total IP: <b>' + (Math.pow(2, 32 - range.prefixBits)).toLocaleString('en-US') + '</b>' +
          '</p>';

      }

    }
  </script>
</body>
</html>