<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Whitespace and UTF Characters -- Free Online Tool</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <meta name="apple-mobile-web-app-title" content="Whitespace and UTF Characters" />
    <meta name="application-name" content="Whitespace and UTF Characters" />

    <meta property="og:title" content="Whitespace and UTF Characters">
    <meta name="description" content="Highlights whitespaces and UTF characters in a text.">
    <meta property="og:description" content="Highlights whitespaces and UTF characters in a text.">
    <meta property="og:locale" content="en_US">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://eakondratiev.github.io/ws.htm">
    <link rel="canonical" href="https://eakondratiev.github.io/ws.htm">

    <meta name="msapplication-config" content="/assets/icons/browserconfig.xml" />
    <meta name="theme-color" content="#444444" />
    <link rel="apple-touch-icon" sizes="180x180" href="/assets/icons/apple-touch-icon-180.png" />
    <link rel="manifest" href="/assets/icons/manifest.json" />
    <link rel="icon" type="image/png" href="/assets/icons/favicon-96.png" sizes="96x96" />
    <link rel="icon" type="image/png" href="/assets/icons/favicon-32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="/assets/icons/favicon-16.png" sizes="16x16" />
  
    <link href="/assets/main.css?20230912" rel="stylesheet" type="text/css" />
    <script src="/assets/menu.min.js?20240617"></script>
    <script src="/assets/web-app.js"></script>
    <style>
      #text-box, #text-processed {
        border: solid 1px #999;
        box-sizing: border-box; padding:4pt; width:100%;}
      #text-box {font-size:1rem;}
      #text-processed {font-family:"SFMono-Regular",Consolas,"Liberation Mono",Menlo,Courier,monospace;
        display:none; margin: 16pt 0; width:100%;
        overflow-x: auto;
        overflow-wrap: break-word;
        word-break: normal;
        white-space: normal;}
      #text-processed b {background: #fd9; color: #c00; font-weight: normal; min-width:2pt;} /* non-ascii */
      #text-processed i {background: #eee; color: #777; font-style: normal;} /* whitespace */
      .new-line-symbol {font-family: 'Lucida Console'; font-size:0.8rem; padding: 0 2pt;}
      #text-character b {font-family: "SFMono-Regular",Consolas,"Liberation Mono",Menlo,Courier,monospace; line-height: 1.5;}
      #text-character b:empty:before {content:' ';}
      #text-character span:first-child b {font-size:1.2rem; text-align: center;
        background: #eee;}
      @media (prefers-color-scheme: dark) {
        #text-processed b {background: #966502; color: #fe9;}
        #text-processed i {background: #505050; color: #eee;}
      }
    </style>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-PTBT00LYFH"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-PTBT00LYFH');
    </script>
  </head>
  <body>
    <div class="main-content">
      <div class="page-wide header">
        <header class="content">
          <button class="site-menu-btn" aria-label="Open the site menu">
            <div></div>
            <div></div>
            <div></div>
          </button>
          <div class="site-title"><a class="site-logo" href="/">TOOL</a></div>
        </header>
        <nav class="content site-nav" aria-label="Site menu">
          <h3 class="site-nav-header">Online Tools</h3>
          <ul>
          <li class="site-nav-top-item"><a href="file.htm">File Type by Content</a></li>
          <li class="site-nav-top-item"><a href="regex.htm">Regex Tester</a></li>
          <li class="site-nav-top-item"><a href="roman-numerals.htm">Convert a Roman Number</a></li>
          <li class="site-nav-top-item"><a href="iprange.htm">IPv4 Ranges</a></li>
          <li class="site-nav-top-item"><a href="speed.htm">Speed &amp; Distance</a></li>
          <li class="site-nav-top-item"><a href="ws.htm">Character Code Detector</a></li>
          <li class="site-nav-top-item"><a href="floating-point-representation.htm">Representation of Floating-point Numbers 32 and 64 bits</a></li>
          <li class="site-nav-top-item"><a href="floating-point-summation.htm">Floating-point Summation</a></li>
          </ul>
          <h3 class="site-nav-header">Console Tools</h3>
          <ul>
            <li class="site-nav-top-item"><a href="crd-reader.htm">CRD Reader</a></li>
          </ul>
        </nav>
      </div>
      <div class="page-wide">
        <div class="content page-content">
          <noscript><div>This site requires JavaScript to function properly. Please enable it in your browser settings.</div></noscript>
          <div id="incompatible-browser">Please, update your browser.</div>
          <h1>Character Code Detector</h1>
          <p>Identifies spaces and characters that are not part of the Latin alphabet within the text.
          <a href="ws.htm?t=Sоme%20tеxt.%F0%9F%91%8D%F0%9F%98%83%F0%9F%98%80">Example</a></p>
          <div id="text-character" style="display:none;">
            <span>Character <b></b></span>
            <span style="margin-left:1em;">Bytes hex <b></b></span>
          </div>
          <textarea id="text-box" rows="5" accesskey="T" placeholder="Please enter or paste text"></textarea>
          <div>
            <div>Text length: <b id="text-len">0</b></div>
          </div>
          <div id="text-processed"></div>
          <div class="page-tags">
            <b>#UTF</b> <b>#Unicode</b> <b>#Hexadecimal</b> <b>Almost AI-free.</b>
          </div>
        </div>
      </div>
    </div>
    <div class="page-wide footer">
      <div class="footer-menu">
        <ul>
        <li><a href="crd-reader.htm">CRD File Reader Console App</a></li>
        <li><a href="file.htm">Get File Type by Content</a></li>
        <li><a href="mouse-events.htm">Mouse Events</a></li>
        <li><a href="iprange.htm">IPv4 Ranges</a></li>
        <li><a href="regex.htm">Test Regular Expressions</a></li>
        <li><a href="roman-numerals.htm">Roman Numerals Converter</a></li>
        <li><a href="floating-point-representation.htm">Floating-point Representation, 32/64 bit</a></li>
        <li><a href="floating-point-summation.htm">Floating-point Summation</a></li>
        <li><a href="speed.htm">Speed &amp; Distance Scale</a></li>
        <li><a href="ws.htm">Character Code Detector</a></li>
        </ul>
      </div>
      imperfect <b>tools</b>
    </div>
    <script>
      (function () {
        'use strict';

        var URL_PARAM = 't';
        var showBytes = undefined;
        var sourceElement = document.getElementById('text-box'),
          targetElement = document.getElementById('text-processed'),
          lenElement = document.getElementById('text-len'),
          charElement = document.getElementById('text-character'),
          charCharElement = charElement.getElementsByTagName('b')[0],
          charBytesElement = charElement.getElementsByTagName('b')[1],
          urlParams = T.getUrlParameters();

        sourceElement.focus();
        sourceElement.addEventListener ('change', textChanged);
        sourceElement.addEventListener ('keyup', textChanged);
        sourceElement.addEventListener ('paste', function(e) {
          setTimeout (function() { textChanged(); }, 0); // the paste event fired BEFORE the element content is updated, so the call is delayed
        });

        if (urlParams.t !== undefined) {
          // process the url parameter
          sourceElement.value = decodeURIComponent(urlParams.t);
          textChanged();
        }

        // Shows the current character, first check browser support
        if (window.getSelection !== undefined &&
            String.fromCodePoint !== undefined) {

          var cp2b = function(cp) {

            var b = new Array(4); // strings in javascript are UTF-16, 4-bytes
            var i;

            for (i = 3; i >= 0; i--) {
              b[i] = (cp >> (i * 8)) & 0xFF;
            }

            return b; // array of numbers

          };

          charElement.style.display = 'block'; // shows the block
          sourceElement.onmouseup = function(){
            showBytes();
          };

          /**
           * Shows the character and its bytes
           */
          showBytes = function() {
            // https://stackoverflow.com/questions/5290182/how-many-bytes-does-one-unicode-character-take#33349765
            var cp = getCodePoint();
            var i;
            var bytesText = '';
            var skip = true;
            var byteToString = function(b) {
              var s = b.toString(16);
              if (b < 16) {
                return '0' + s;
              }
              return s;
            };

            if (cp === 0) { 
              charCharElement.innerHTML = '';
              charBytesElement.innerHTML = '';
              return; 
            }

            var b = cp2b(cp);
            if (cp > 0) {
              charCharElement.innerHTML = String.fromCodePoint (cp);
            }
            else {
              charCharElement.innerHTML = '';
            }

            // show bytes in reverse order
            for (i = b.length - 1; i >= 0; i--) {

              if (b[i] === 0 && skip) {
                continue;
              }
              skip = false;
              bytesText += ' ' + byteToString(b[i]) + '';  // hex
  
            }

            charBytesElement.innerHTML = bytesText;
          };

        }

        /**
         * Return the Unicode code point next to text cursor or zero;
         */
        function getCodePoint (){
          var p = sourceElement.selectionStart;
          var c = sourceElement.value.codePointAt(p);
          if (sourceElement.selectionEnd - p <= 1) {
            return c;
          }
          return 0;
        }

        /**
         * Sets text from the textarea to the url parameter.
         */
        function textChanged() {

          targetElement.innerHTML = processText(sourceElement.value);

          if (sourceElement.value.length > 0) {
            targetElement.style.display = 'block';
          }
          else {
            targetElement.style.display = 'none';
          }
          lenElement.innerHTML = sourceElement.value.length.toString();

          // Show character next to text cursor
          if (typeof showBytes === 'function') {
            showBytes();
          }

          if (window.history.pushState) {
            window.history.pushState('ws.htm', 'Title', '/ws.htm?' +
              URL_PARAM + '=' + encodeURIComponent(sourceElement.value));
          }
        }

        /**
         * Processes entered text.
         * @param {string} text the entered text.
         */
        function processText(text) {

          // NOTE: textarea internal value, the line breaks are normalized to LF (only).
          var reNonAscii = /([\u00FF-\uFFFF])/g,
            reNewline = /\n/g,
            reWhiteSpace = /[\u0020\u00A0\u2000-\u200A\u2028\u205F\u3000]/g,
            reTab = /\t/g;
          return text.replace(reNonAscii, '<b>$1</b>')
            .replace(reTab, '<i>&rarr;</i>')
            .replace(reWhiteSpace, '<i>.</i>')
            .replace(reNewline, '<i class="new-line-symbol">&para;</i><br />');
        }

      })();
    </script>
  </body>
</html>