<!doctype html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>White Space and UTF Characters</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="/assets/main.css" rel="stylesheet" type="text/css" />
    <style>
      #text-box, #text-processed {
        border: solid 1px #999;
        box-sizing: border-box; padding:4pt; width:100%;}
      #text-box {font-size:1rem;}
      #text-processed {font-family:"SFMono-Regular",Consolas,"Liberation Mono",Menlo,Courier,monospace;
        font-size: 1.2rem; display:none; margin: 16pt 0; width:100%;}
      #text-processed b {color: #c00; min-width:2pt; background: #fd9;} /* non-ascii */
      #text-processed i {background: #eee; font-style: normal; color: #777;} /* white space */
      .new-line-symbol {font-family: 'Lucida Console'}
    </style>
  </head>
  <body>
    <div class="page-wide header">
      <header class="content">
        <h1>White Space and UTF Characters Highlighter</h1>
      </header>
    </div>
    <div class="page-wide">
      <div class="content">
        <p>Enter or paste a text here...</p>
        <textarea id="text-box" rows="5"></textarea>
        <div>Text length: <b id="text-len"></b></div>
        <div id="text-processed"></div>
      </div>
    </div>
    <div class="page-wide footer">
    ...
    </div>
  </body>
  <script>
    (function(){

      const URL_PARAM = "q";

      var sourceElement = document.getElementById ("text-box"),
        targetElement = document.getElementById ("text-processed"),
        lenElement = document.getElementById ("text-len"),
        textParamRaw = GetUrlText ();

      sourceElement.focus();
      sourceElement.onchange = textChanged;
      sourceElement.onkeyup = textChanged;
      
      if (textParamRaw) {
        sourceElement.value = decodeURIComponent (textParamRaw);
        textChanged ();
      }

      function textChanged () {

        targetElement.innerHTML = processText (sourceElement.value);
        targetElement.style.display = "block";
        lenElement.innerHTML = sourceElement.value.length.toString();
        
        window.history.pushState('ws.htm', 'Title', '/ws.htm?' +
          URL_PARAM + '=' + encodeURIComponent (sourceElement.value));
      }

      function processText (source) {

        var reNonAscii = (/([\u00FF-\uFFFF])/g),
          reNewlines = (/[\r\f\n]/g),
          reWhiteSpace = (/[ ]/g),
          reTab = (/\t/g);
        return source.replace(reNonAscii, '<b>$1</b>')
                     .replace (reTab, '<i>&rarr;</i>')
                     .replace (reWhiteSpace, '<i>.</i>')
                     .replace(reNewlines, '<i class="new-line-symbol">&para;</i><br />');
      }

      /**
       * Returns the text from url parameter or null.
       * */
      function GetUrlText () {

        try {
          var url = new URL(window.location.href);
          return url.searchParams.get(URL_PARAM);
        }
        catch(error) {
          return null;
        }

      }
    })();
  </script>
</html>