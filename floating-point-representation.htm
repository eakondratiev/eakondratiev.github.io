<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Floating-Point Numbers Representation -- Free Online Tool</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="index, follow">

    <meta name="apple-mobile-web-app-title" content="Floating-Point Numbers Representation" />
    <meta name="application-name" content="Floating-Point Numbers Representation" />

    <meta property="og:title" content="Floating-Point Numbers Representation">
    <meta name="description" content="Understand floating-point representation in computer systems. Learn about precision, rounding errors, and how numbers are stored and processed.">
    <meta property="og:description" content="Understand floating-point representation in computer systems. Learn about precision, rounding errors, and how numbers are stored and processed.">
    <meta property="og:locale" content="en_US">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://eakondratiev.github.io/floating-point-representation.htm">
    <link rel="canonical" href="https://eakondratiev.github.io/floating-point-representation.htm">

    <meta name="msapplication-config" content="/assets/icons/browserconfig.xml" />
    <meta name="theme-color" content="#444444" />
    <link rel="apple-touch-icon" sizes="180x180" href="/assets/icons/apple-touch-icon-180.png" />
    <link rel="manifest" href="/assets/icons/manifest.json" />
    <link rel="icon" type="image/png" href="/assets/icons/favicon-96.png" sizes="96x96" />
    <link rel="icon" type="image/png" href="/assets/icons/favicon-32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="/assets/icons/favicon-16.png" sizes="16x16" />
  
    <link href="/assets/main.css?20250322" rel="stylesheet" type="text/css" />
    <script src="/assets/menu.min.js?20250926"></script>
    <script src="/assets/web-app.js"></script>
    <style>
      .bits {margin: 8pt 0; line-height: 1.5;}
      article {line-height: 1.7;}
      .fp-bit {font-family: 'Cascadia Mono', Consolas, 'Lucida Console', Courier New, Courier, monospace;
        padding: 0 1pt; white-space: nowrap;}
      .fp-sign {background-color: #fd0;}
      .fp-exp {background-color: #9e0;}
      .fp-fraction {background-color: #7cf;}
      .note {color: #000; font-size: 0.9rem;}
      .fp-form {margin-top: 16pt;}
      .fp-form input, .fp-form button {padding: 2pt 4pt; height: 20pt; box-sizing: border-box;}
      .content-wide {display:inline-block; max-width:90vw; overflow-x: auto;}
      .fp-nowrap {white-space: nowrap;}
      @media (prefers-color-scheme: dark) {
        .fp-sign {background-color: #a50;}
        .fp-exp {background-color: #480;}
        .fp-fraction {background-color: #349;}
        .note {color: #ccc;}
      }
    </style>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-PTBT00LYFH"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-PTBT00LYFH');
    </script>
  </head>
  <body>
    <div class="main-content">
      <div class="page-wide header">
        <header class="content">
          <button class="site-menu-btn" aria-label="Open the site menu">
            <div></div>
            <div></div>
            <div></div>
          </button>
          <div class="site-title"><a class="site-logo" href="/">TOOL</a></div>
        </header>
        <nav class="content site-nav" aria-label="Site menu">
          <h3 class="site-nav-header">Online Tools</h3>
          <ul>
          <li class="site-nav-top-item"><a href="file.htm">File Type by Content</a></li>
          <li class="site-nav-top-item"><a href="sha256.htm">File SHA-256 Checksum</a></li>
          <li class="site-nav-top-item"><a href="regex.htm">Regex Tester</a></li>
          <li class="site-nav-top-item"><a href="roman-numerals.htm">Convert a Roman Number</a></li>
          <li class="site-nav-top-item"><a href="iprange.htm">IPv4 Ranges</a></li>
          <li class="site-nav-top-item"><a href="speed.htm">Speed &amp; Distance</a></li>
          <li class="site-nav-top-item"><a href="ws.htm">Text Characters Analyzer</a></li>
          <li class="site-nav-top-item"><a href="floating-point-representation.htm">Representation of Floating-point Numbers 32 and 64 bits</a></li>
          <li class="site-nav-top-item"><a href="floating-point-summation.htm">Floating-point Summation</a></li>
          </ul>
          <h3 class="site-nav-header">Console Tools</h3>
          <ul>
            <li class="site-nav-top-item"><a href="crd-reader.htm">CRD Reader</a></li>
          </ul>
        </nav>
      </div>
      <div class="page-wide">
        <div class="content page-content">
          <noscript><div>This site requires JavaScript to function properly. Please enable it in your browser settings.</div></noscript>
          <div id="incompatible-browser">Please, update your browser.</div>
          <h1>Floating-Point Numbers Representation</h1>
          <p>
          Understand floating-point representation in computer systems. Learn about precision, rounding errors, and how numbers are stored and processed.
          See how floating-point numbers represented in binary formats.
          </p>

          <div class="fp-form">
            <input type="text" id="input-fp-number" accesskey="N" placeholder="Enter a number" value="" aria-label="Enter a floating point number">
            <button type="button" id="btn-show-rep" accesskey="S"><u>S</u>how</button>
          </div>
          <div class="note">Enter a floating point <u>n</u>umber.</div>
          <div class="note">Examples:
            <a href="floating-point-representation.htm?n=0.1">0.1</a>,
            <a href="floating-point-representation.htm?n=-2.0">-2.0</a>,
            <a href="floating-point-representation.htm?n=6.0">6.0</a>
          </div>
          <div class="fp-representation"></div>

          <article>
            <h2>Format</h2>
            <p>
              Real numbers are represented in computing as an array of bits.
              Generally, it is 32 or 64 bits long.
            </p>
            <p>
              The first bit is a <i>sign</i> followed by the <i>exponent</i> bits. Other bits are for <i>significand</i> (<i>mantissa</i>).
              Implementations of the floating-point arithmetics are described in the IEE 754 standard.
            </p>
            <p>
              The <i>single-precision</i> (<i>float</i> data type in C language) values are stored as 4 bytes or 32 bits: 1 sign bit, 8-bit exponent, 23-bit significand.
            </p>
            <p>
              The <i>double-precision</i> (<i>double</i> data type in C language) values are stored as 8 bytes or 64 bits: 1 sign bit, 11-bit exponent, 52-bit significand.
            </p>
            <p>
              Other formats are: 2-byte (half-precision), 10-byte (double-extended precision), and 16-byte (quadruple-precision).
              The single-precision floating-point format is described in this
              <a href="https://en.wikipedia.org/wiki/Single-precision_floating-point_format" rel="nofollow" class="outer-link">article on Wikipedia</a>.
            </p>
            <h3>Exponent</h3>
            <p>
              The exponents are power of two. The exponent is stored in biased form. To get the real exponent substract the value 127 (for single-precision)
              or 1023 (for double-precision) from the stored exponent. Note: all zeroes and all ones in exponent are reserved for special numbers.
            </p>
            <p>
              For example, the single-precision exponent stored as 123. The real exponent is <span class="fp-nowrap">123 - 127 = -4</span>.
              And the exponent part encoded the value <span class="fp-nowrap">2<sup>-4</sup> = 1/2<sup>4</sup> = 0,0625</span>.
            </p>
            <h3>Mantissa</h3>
            <p>
              The mantissa is stored as a binary fraction of the form <b>1</b>.NNN...But this 1 is not stored but assumed.
              For example, the <a href="floating-point-representation.htm?n=1.625">number 1.625</a> is stored as
              <span class="fp-nowrap">1.625&times;2<sup>0</sup></span>. The value 1.625 stored as 0.625 in binary.
              Which is <span class="fp-nowrap">1010000 00000000 00000000</span> = 
              <span class="fp-nowrap">1/2<sup>1</sup> + 0/2<sup>2</sup> + 1/2<sup>3</sup> + 0/2<sup>4</sup> ... + 0/2<sup>23</sup></span>
              = 1/2 + 1/8 = 0.625.
            </p>

            <h3>How to Deal with Inaccuracies in Real Numbers Caused by Binary Representation?</h3>

            <p>If the range of real number values is known, consider using specialized data types such as <i>Decimal</i> in Python, <i>BigDecimal</i> in Java,
              and <a href="https://github.com/MikeMcl/bignumber.js"><i>BigNumber.js</i></a> in JavaScript.</p>

            <p>Avoid comparing real numbers using the equality operator, such as <code>if (x == 0.3)</code>.
              Instead, compare the difference between the numbers with a small threshold, like this: </p>
            <pre class="code">
const DELTA = 0.001;
...
if (Math.abs(x - 0.3) <= DELTA) ...</pre>
            
            <p>The error in binary representation accumulates when summing real numbers.
            While algorithms like the Kahan <a href="floating-point-summation.htm">summation</a> algorithm can help mitigate these numerical errors,
            they do not eliminate them completely and only reduce their impact.</p>

          </article>
          <template id="tpl-js-representaion" style="display:none">
            <p>Javascript representation is the 64-bit number</p>
            <div class="content-wide"><b>{N}</b></div>
          </template>

          <div class="page-tags">
            <b>#CS</b> <b>#Computer science</b> <b>#FP</b> <b>#Float32</b> <b>#Float64</b> <b>#Decimal</b> <b>#Binary</b> <b>#IEE754</b> <b>#Calculator</b>
          </div>
        </div>
      </div>
    </div>
    <div class="page-wide footer">
      <div class="footer-menu">
        <ul>
        <li><a href="crd-reader.htm">CRD File Reader Console App</a></li>
        <li><a href="file.htm">Get File Type by Content</a></li>
        <li><a href="sha256.htm">Verify File SHA-256 Checksum</a></li>
        <li><a href="mouse-events.htm">Mouse Events</a></li>
        <li><a href="iprange.htm">IPv4 Ranges</a></li>
        <li><a href="nslookup.htm">DNS over HTTPS</a></li>
        <li><a href="regex.htm">Test Regular Expressions</a></li>
        <li><a href="roman-numerals.htm">Roman Numerals Converter</a></li>
        <li><a href="floating-point-representation.htm">Floating-point Representation, 32/64 bit</a></li>
        <li><a href="floating-point-summation.htm">Floating-point Summation</a></li>
        <li><a href="speed.htm">Speed &amp; Distance Scale</a></li>
        <li><a href="ws.htm">Character Code Detector</a></li>
        </ul>
      </div>
      imperfect <b>tools</b>
    </div>
    <script src="/assets/fprep.min.js?20230407"></script>
    <script>
      // check for compatibility
      if (document.getElementsByClassName === undefined ||
         window.fetch === undefined ||
         typeof WebAssembly !== "object" ||
         typeof WebAssembly.instantiate !== "function" ||
         !Element.prototype.addEventListener ||
         !Array.prototype.map ||
         !Array.prototype.reduce) {

        document.getElementById('incompatible-browser').style.display = 'block';

      }
      else {
        var inputElement = document.getElementById ('input-fp-number');
        var resultElement = document.getElementsByClassName('fp-representation')[0];
        var calcBtn = document.getElementById('btn-show-rep');
        var urlParams = T.getUrlParameters();

        if (urlParams.n !== undefined) {
          // process the url parameter
          inputElement.value = urlParams.n;
          processFloatingPointValue(inputElement, resultElement);
        }

        calcBtn.addEventListener('click', function () {
          processFloatingPointValue(inputElement, resultElement);
        });

        inputElement.addEventListener('keypress', function(e) { 
          if (e.key === 'Enter') {
            processFloatingPointValue(inputElement, resultElement);
          }
        });

      }
    </script>
  </body>
</html>