<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Floating-Point Numbers Representation</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <meta name="apple-mobile-web-app-title" content="Floating-Point Numbers Representation" />
    <meta name="application-name" content="Floating-Point Numbers Representation" />

    <meta property="og:title" content="Floating-Point Numbers Representation">
    <meta name="description" content="Shows representation of the floating-point numbers in binary formats.">
    <meta property="og:description" content="Shows representation of the floating-point numbers in binary formats.">
    <meta property="og:locale" content="en_US">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://eakondratiev.github.io/floating-point-representation.htm">
    <link rel="canonical" href="https://eakondratiev.github.io/floating-point-representation.htm">

    <meta name="msapplication-config" content="/assets/icons/browserconfig.xml" />
    <meta name="theme-color" content="#ffffff" />
    <link rel="apple-touch-icon" sizes="180x180" href="/assets/icons/apple-touch-icon-180.png" />
    <link rel="manifest" href="/assets/icons/manifest.json" />
    <link rel="icon" type="image/png" href="/assets/icons/favicon-96.png" sizes="96x96" />
    <link rel="icon" type="image/png" href="/assets/icons/favicon-32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="/assets/icons/favicon-16.png" sizes="16x16" />
  
    <link href="/assets/main.css?20211208" rel="stylesheet" type="text/css" />
    <script src="/assets/menu.min.js?20211209"></script>
    <style>
      .bits {margin: 8pt 0; line-height: 1.5;}
      .fp-bit {font-family: 'Cascadia Mono', Consolas, 'Lucida Console', Courier New, Courier, monospace;
        padding: 0 1pt; white-space: nowrap;}
      .fp-sign {background-color: #fd0;}
      .fp-exp {background-color: #9e0;}
      .fp-fraction {background-color: #7cf;}
      .note {color: #000; font-size: 0.9rem;}
      .fp-form {margin-top: 16pt;}
      .fp-form input, .fp-form button {padding: 2pt 4pt; height: 20pt; box-sizing: border-box;}
      @media (prefers-color-scheme: dark) {
        .note {color: #ccc;}
      }
    </style>
  </head>
  <body>
    <div class="main-content">
      <div class="page-wide header">
        <header class="content">
          <button class="site-menu-btn" aria-label="Open the site menu">
            <div></div>
            <div></div>
            <div></div>
          </button>
          <div class="site-title"><a class="site-logo" href="/">TOOL</a></div>
        </header>
        <nav class="content site-nav" aria-label="Site menu">
          <ul>
          <li class="site-nav-top-item"><a href="/">Home Page</a></li>
          <li class="site-nav-top-item"><a href="iprange.htm">IPv4 Ranges</a></li>
          <li class="site-nav-top-item"><a href="speed.htm">Speed &amp; Distance</a></li>
          <li class="site-nav-top-item"><a href="ws.htm">White Spaces</a></li>
          <li class="site-nav-top-item"><a href="floating-point-summation.htm">Floating-point Summation</a></li>
          </ul>
        </nav>
      </div>
      <div class="page-wide">
        <div class="content page-content">
          <div id="incompatible-browser">Please, update your browser.</div>
          <h1>Floating-Point Numbers Representation</h1>
          <p>Shows representation of the floating-point numbers in binary formats.</p>

          <div class="fp-form">
            <input type="text" id="input-fp-number" placeholder="0.1" value="" aria-label="Enter a floating point number">
            <button type="button" id="btn-show-rep" accesskey="S"><u>S</u>how</button>
          </div>
          <div class="note">Enter a floating point number.</div>
          <div class="note">Examples:
            <a href="floating-point-representation.htm?n=0.1">0.1</a>,
            <a href="floating-point-representation.htm?n=-2.0">-2.0</a>,
            <a href="floating-point-representation.htm?n=6.0">6.0</a>,
          </div>
          <div class="fp-representation"></div>

          <p>
           Real numbers are represented in computing as an array of bits.
           In the 32-bit representation (<i>float</i> data type in C language)
           the first bit is a sign, the next 8 bits are exponent, and other bits are significand.
           In the 64-bit representation (<i>double</i> data type in C language)
           the first bit is a sign, the next 11 bits are exponent, and other bits are significand.
           See the <a href="https://en.wikipedia.org/wiki/Single-precision_floating-point_format" rel="nofollow" class="outer-link">Single-precision floating-point format</a>
           article on Wikipedia.
          </p>
          <p>
            This representation is inaccurate by design for some numbers.
            The error accumulates when summing several numbers.
            To reduce this kind of numerical errors <a href="floating-point-summation.htm">algorithms</a> were developed.
          </p>

        </div>
      </div>
    </div>
    <div class="page-wide footer">
      imperfect <b>tools</b>
    </div>
    <script src="/assets/fprep.min.js?20211211"></script>
    <script>
      // check for compatibility
      if (document.getElementsByClassName === undefined ||
         window.fetch === undefined ||
         !Element.prototype.addEventListener ||
         !Array.prototype.map ||
         !Array.prototype.reduce) {

        document.getElementById('incompatible-browser').style.display = 'block';

      }
      else {
        var inputElement = document.getElementById ('input-fp-number');
        var resultElement = document.getElementsByClassName('fp-representation')[0];
        var calcBtn = document.getElementById('btn-show-rep');
        var urlParams = T.getUrlParameters();

        if (urlParams.n !== undefined) {
          // process the url parameter
          inputElement.value = urlParams.n;
          processFloatingPointValue(inputElement, resultElement);
        }

        calcBtn.addEventListener('click', function () {
          processFloatingPointValue(inputElement, resultElement);
        });

        inputElement.addEventListener('keypress', function(e) { 
          if (e.key === 'Enter') {
            processFloatingPointValue(inputElement, resultElement);
          }
        });

      }


    </script>
  </body>
</html>